import { NextRequest, NextResponse } from 'next/server';
import { mockReviews } from '@/lib/mockData';

export async function GET(
  request: NextRequest,
  { params }: { params: { tripId: string } }
) {
  try {
    const tripReviews = mockReviews.filter(review => review.tripId === params.tripId);
    
    // Calculate review summary
    const totalReviews = tripReviews.length;
    const averageRating = totalReviews > 0 
      ? tripReviews.reduce((sum, review) => sum + review.rating, 0) / totalReviews
      : 0;
    
    // Mock AI summary (in real app, this would be generated by AI)
    const aiSummary = totalReviews > 0 
      ? "Travelers consistently praise the authentic local experiences, knowledgeable guides, and well-organized itinerary. Many highlight the excellent food spots and cultural insights gained."
      : "No reviews available yet.";
    
    const highlights = totalReviews > 0 
      ? ["Authentic local experiences", "Knowledgeable guides", "Great food spots", "Cultural insights"]
      : [];
    
    return NextResponse.json({
      reviews: tripReviews,
      summary: {
        averageRating: Math.round(averageRating * 10) / 10,
        totalReviews,
        aiSummary,
        highlights
      }
    });
    
  } catch (error) {
    console.error('Error fetching reviews:', error);
    return NextResponse.json(
      { error: 'Internal server error' },
      { status: 500 }
    );
  }
}